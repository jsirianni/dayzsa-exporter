name: CI
on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Run shellcheck against CI scripts
        uses: ludeeus/action-shellcheck@master
        with:
          version: v0.8.0
          scandir: package/scripts/
          severity: info

  setup-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache Go
        id: tool-cache
        uses: actions/cache@v4
        with:
          path: /home/runner/go/bin
          key: tooling-${{ runner.os }}-${{ hashFiles('go.mod') }}-${{ hashFiles('./internal/tools/go.mod') }}

      - name: Setup Go
        if: steps.tool-cache.outputs.cache-hit != 'true'
        uses: actions/setup-go@v5.3.0
        with:
          go-version-file: "go.mod"
 
      - name: Setup Go Environment
        if: steps.tool-cache.outputs.cache-hit != 'true'
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Install dependencies
        if: steps.tool-cache.outputs.cache-hit != 'true'
        run: make gomoddownload

      - name: Install Tools
        if: steps.tool-cache.outputs.cache-hit != 'true'
        run: make install-tools

  secure:
    runs-on: ubuntu-latest
    needs:
      - setup-environment
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Go
        uses: actions/setup-go@v5.3.0
        with:
          go-version-file: "go.mod"

      - name: Cache Tools
        id: tool-cache
        uses: actions/cache@v4
        with:
          path: /home/runner/go/bin
          key: tooling-${{ runner.os }}-${{ hashFiles('go.mod') }}-${{ hashFiles('./internal/tools/go.mod') }}

      - name: Install Tools
        if: steps.tool-cache.outputs.cache-hit != 'true'
        run: make install-tools

      - name: Gosec
        run: make secure

  lint:
    runs-on: ubuntu-latest
    needs:
      - setup-environment
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Go
        uses: actions/setup-go@v5.3.0
        with:
          go-version-file: "go.mod"

      - name: Cache Tools
        id: tool-cache
        uses: actions/cache@v4
        with:
          path: /home/runner/go/bin
          key: tooling-${{ runner.os }}-${{ hashFiles('go.mod') }}-${{ hashFiles('./internal/tools/go.mod') }}

      - name: Install Tools
        if: steps.tool-cache.outputs.cache-hit != 'true'
        run: make install-tools

      - name: Lint
        run: make lint

  test:
    runs-on: ubuntu-latest
    needs:
      - setup-environment
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Go
        uses: actions/setup-go@v5.3.0
        with:
          go-version-file: "go.mod"

      - name: Test
        run: make test

  build:
    runs-on: ubuntu-latest
    needs:
      - setup-environment
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Go
        uses: actions/setup-go@v5.3.0
        with:
          go-version-file: "go.mod"

      - name: Test GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --skip=publish --snapshot
